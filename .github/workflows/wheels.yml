name: Build wheels

on:
  push:
    branches:
      - main

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    permissions:
      contents: read
    strategy:
      fail-fast: false
      matrix:
        # cibuildwheel builds linux wheels inside a manylinux container
        # it also takes care of procuring the correct python version for us
        os: [ubuntu-latest, macos-latest]
        python-version: [cp38, cp39, cp310]
    steps:
      - uses: actions/checkout@v2

      - name: Setup SSH Keys
        uses: webfactory/ssh-agent@v0.5.4
        with:
          ssh-private-key: ${{ secrets.SUBMODULE_CONTENT_PULL_SECRET_KEY }}
      - name: Fetch submodules
        run: |
          git submodule sync
          git submodule update --init --recursive
          git pull --recurse-submodules

      - name: Setting up Python
        uses: actions/setup-python@v1
        with:
          python-version: '3.8'

      - name: set up rust
        if: matrix.target != 'sdist' && matrix.os != 'ubuntu-latest'
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          override: true

      - name: Install dependencies
        run: |
          python -m pip install -U setuptools wheel twine cibuildwheel

      - name: build ${{ matrix.os }} binaries
        uses: pypa/cibuildwheel@v2.8.0
        env:
          CIBW_BUILD: ${{ matrix.python-version }}-*
          CIBW_SKIP: >
            *-win32
            *-musllinux_i686
            *-i686-unknown-linux-musl
          # CIBW_TEST_REQUIRES: pytest
          # CIBW_TEST_COMMAND: pytest {project}/tests -s
          CIBW_ENVIRONMENT: PATH="$HOME/.cargo/bin:$PATH"
          CIBW_ENVIRONMENT_WINDOWS: PATH="$UserProfile\.cargo\bin;$PATH"
          CIBW_MANYLINUX_X86_64_IMAGE: manylinux2014
          CIBW_MANYLINUX_I686_IMAGE: manylinux2014
          CIBW_ARCHS_MACOS: "x86_64 arm64"
          CIBW_BEFORE_ALL: >
            pip install --upgrade pip &&
            pip install -U setuptools &&
            pip install -U setuptools-rust
          CIBW_BEFORE_BUILD_LINUX: >
            curl https://sh.rustup.rs -sSf | sh -s -- --default-toolchain=nightly --profile=minimal -y &&
            rustup component add rustfmt &&
            chmod +x scripts/build_openssl.sh &&
            ./scripts/build_openssl.sh &&
            chmod +x scripts/install_dependencies.sh &&
            ./scripts/install_dependencies.sh

          CIBW_BEFORE_BUILD_MACOS: >
            curl https://sh.rustup.rs -sSf | sh -s -- --default-toolchain=beta -y &&
            rustup component add rustfmt &&
            rustup target add aarch64-apple-darwin

      - uses: actions/upload-artifact@v3
        with:
          path: ./wheelhouse/*.whl
